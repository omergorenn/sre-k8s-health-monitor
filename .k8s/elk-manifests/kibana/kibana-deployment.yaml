apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "8"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"generation":3,"labels":{"app":"kibana","app.kubernetes.io/managed-by":"Helm","heritage":"Helm","release":"kibana"},"name":"kibana-kibana","namespace":"monitoring","resourceVersion":"88512","uid":"34732749-6990-482d-a31f-694e70aa7ffc"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"kibana","release":"kibana"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"2024-09-23T19:41:00+03:00"},"creationTimestamp":null,"labels":{"app":"kibana","release":"kibana"}},"spec":{"automountServiceAccountToken":true,"containers":[{"env":[{"name":"ELASTICSEARCH_HOSTS","value":"https://elasticsearch-master:9200"},{"name":"ELASTICSEARCH_SSL_VERIFICATIONMODE","value":"none"},{"name":"XPACK_SECURITY_ENCRYPTIONKEY","value":"0407346dfb389ce981f28b59ea19d6af32ae4effd96e670daad9b0ca1ff1df01"},{"name":"XPACK_REPORTING_ENCRYPTIONKEY","value":"c06545a7e9e2d1c08793c6e1784acdd4098148a862e2380e029c34f447e135dd"},{"name":"XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY","value":"3464f69cf24be726fe19c92f400102e0a3b2066a71604ae9adf154e5534dfbae"},{"name":"SERVER_HOST","value":"0.0.0.0"},{"name":"ELASTICSEARCH_SERVICEACCOUNTTOKEN","valueFrom":{"secretKeyRef":{"key":"token","name":"kibana-kibana-es-token","optional":false}}},{"name":"NODE_OPTIONS","value":"--max-old-space-size=1800"}],"image":"docker.elastic.co/kibana/kibana:8.5.1","imagePullPolicy":"IfNotPresent","name":"kibana","ports":[{"containerPort":5601,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["bash","-c","#!/usr/bin/env bash -e\n\n# Disable nss cache to avoid filling dentry cache when calling curl\n# This is required with Kibana Docker using nss \u003c 3.52\nexport NSS_SDB_USE_CACHE=no\n\nhttp () {\n    local path=\"${1}\"\n    set -- -XGET -s --fail -L\n\n    if [ -n \"${ELASTICSEARCH_USERNAME}\" ] \u0026\u0026 [ -n \"${ELASTICSEARCH_PASSWORD}\" ]; then\n      set -- \"$@\" -u \"${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}\"\n    fi\n\n    STATUS=$(curl --output /dev/null --write-out \"%{http_code}\" -k \"$@\" \"http://localhost:5601${path}\")\n    if [[ \"${STATUS}\" -eq 200 ]]; then\n      exit 0\n    fi\n\n    echo \"Error: Got HTTP code ${STATUS} but expected a 200\"\n    exit 1\n}\n\nhttp \"/app/kibana\"\n"]},"failureThreshold":3,"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":3,"timeoutSeconds":5},"resources":{"limits":{"cpu":"1","memory":"2Gi"},"requests":{"cpu":"1","memory":"2Gi"}},"securityContext":{"capabilities":{"drop":["ALL"]},"runAsNonRoot":true,"runAsUser":1000},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/usr/share/kibana/config/certs","name":"elasticsearch-certs","readOnly":true},{"mountPath":"/usr/share/kibana/config/tokens","name":"kibana-tokens","readOnly":true}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000},"terminationGracePeriodSeconds":30,"volumes":[{"emptyDir":{},"name":"kibana-tokens"},{"name":"elasticsearch-certs","secret":{"defaultMode":420,"secretName":"elasticsearch-master-certs"}}]}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2024-09-23T16:41:32Z","lastUpdateTime":"2024-09-23T16:41:32Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2024-09-20T22:16:10Z","lastUpdateTime":"2024-09-23T16:41:32Z","message":"ReplicaSet \"kibana-kibana-7ccc648bf4\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":3,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
  creationTimestamp: "2024-09-20T22:16:10Z"
  generation: 9
  labels:
    app: kibana
    app.kubernetes.io/managed-by: Helm
    heritage: Helm
    release: kibana
  name: kibana-kibana
  namespace: monitoring
  resourceVersion: "91400"
  uid: 34732749-6990-482d-a31f-694e70aa7ffc
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kibana
      release: kibana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2024-09-23T20:05:48+03:00"
      creationTimestamp: null
      labels:
        app: kibana
        release: kibana
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: ELASTICSEARCH_HOSTS
          value: http://elasticsearch-master:9200
        - name: ELASTICSEARCH_SSL_VERIFICATIONMODE
          value: none
        - name: XPACK_SECURITY_ENCRYPTIONKEY
          value: 0407346dfb389ce981f28b59ea19d6af32ae4effd96e670daad9b0ca1ff1df01
        - name: XPACK_REPORTING_ENCRYPTIONKEY
          value: c06545a7e9e2d1c08793c6e1784acdd4098148a862e2380e029c34f447e135dd
        - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
          value: 3464f69cf24be726fe19c92f400102e0a3b2066a71604ae9adf154e5534dfbae
        - name: SERVER_HOST
          value: 0.0.0.0
        - name: ELASTICSEARCH_SERVICEACCOUNTTOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: kibana-kibana-es-token
              optional: false
        - name: NODE_OPTIONS
          value: --max-old-space-size=1800
        image: docker.elastic.co/kibana/kibana:8.5.1
        imagePullPolicy: IfNotPresent
        name: kibana
        ports:
        - containerPort: 5601
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - |
              #!/usr/bin/env bash -e

              # Disable nss cache to avoid filling dentry cache when calling curl
              # This is required with Kibana Docker using nss < 3.52
              export NSS_SDB_USE_CACHE=no

              http () {
                  local path="${1}"
                  set -- -XGET -s --fail -L

                  if [ -n "${ELASTICSEARCH_USERNAME}" ] && [ -n "${ELASTICSEARCH_PASSWORD}" ]; then
                    set -- "$@" -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}"
                  fi

                  STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "http://localhost:5601${path}")
                  if [[ "${STATUS}" -eq 200 ]]; then
                    exit 0
                  fi

                  echo "Error: Got HTTP code ${STATUS} but expected a 200"
                  exit 1
              }

              http "/app/kibana"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: "1"
            memory: 2Gi
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/kibana/config/certs
          name: elasticsearch-certs
          readOnly: true
        - mountPath: /usr/share/kibana/config/tokens
          name: kibana-tokens
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: kibana-tokens
      - name: elasticsearch-certs
        secret:
          defaultMode: 420
          secretName: elasticsearch-master-certs
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-09-23T17:06:24Z"
    lastUpdateTime: "2024-09-23T17:06:24Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2024-09-20T22:16:10Z"
    lastUpdateTime: "2024-09-23T17:06:24Z"
    message: ReplicaSet "kibana-kibana-85dc6f6cb8" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 9
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
